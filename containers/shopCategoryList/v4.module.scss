.slideItem {
  width: auto !important; // Allow swiper to calculate width based on slidesPerView
  max-width: 120px;
  display: flex; // Center card within slide if needed
  justify-content: center; // Center card within slide if needed
}

.slider {
  padding: 10px 40px;

  @media (max-width: 768px) {
    padding: 15px 0;
  }
}

.shimmer {
  height: 100px; // Approximate height (img + text + gap)
  width: 90px; // Match card width
  border-radius: 12px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  padding: 10px;

  // Simulate round image shimmer
  &::before {
    content: '';
    display: block;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background-color: currentColor; // Inherit skeleton color
    opacity: 0.11; // Match MUI Skeleton opacity
  }
   // Simulate text shimmer
  &::after {
    content: '';
    display: block;
    width: 80%;
    height: 1.2em * 2; // Match text line height * lines
    background-color: currentColor;
    opacity: 0.11;
    border-radius: 4px;
  }

  @media (max-width: 768px) {
    width: 70px;
    height: 85px; // Adjust height
     &::before {
        width: 50px;
        height: 50px;
     }
  }
}

/* Remove the conflicting .card styles below */
/*
.card {
  background-color: var(--card-bg);
  border-radius: 12px;
  padding: 18px 26px;
  display: flex;
  align-items: center;
  gap: 10px;
  max-width: max-content;
  transition: all 0.1s linear;

  &:hover, &.active {
    background-color: var(--primary);
  }

  @media (max-width: 768px) {
    padding: 13px 16px;
  }

  .text {
    font-weight: 500;
    font-size: 20px;
    @media (max-width: 768px) {
      font-size: 16px;
    }
  }
}
*/

.allCard {
  border-radius: 12px;
  padding: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  width: 90px;
  text-align: center;
  cursor: pointer;
  // Add a placeholder for the icon area to maintain alignment
  &::before {
     content: '';
     display: block;
     width: 60px;
     height: 60px;
     // background-color: lightgray; // Optional placeholder bg
     border-radius: 50%;
  }
  .text {
     font-weight: 500;
     font-size: 14px;
     color: var(--text-black);
     line-height: 1.2;
     min-height: calc(1.2em * 2);
  }

   @media (max-width: 768px) {
     width: 70px;
     padding: 8px;
     gap: 5px;
     &::before {
        width: 50px;
        height: 50px;
     }
     .text {
        font-size: 12px;
     }
   }
}

.sliderContainer {
  position: relative; // Needed for absolute positioning of arrows
  padding: 20px 0;
}

// Base styles for category swiper buttons
.categorySwiperBtn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
  width: 36px; // Adjust size as needed
  height: 36px; // Adjust size as needed
  background: rgba(255, 255, 255, 0.9); // Example background
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border: 1px solid var(--grey-border); // Optional border
  color: var(--text-black); // Icon color
  transition: all 0.2s ease;

  &:hover {
    background: var(--primary);
    color: white;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  // Hide buttons by default on smaller screens if desired
  @media (max-width: 768px) {
     // display: none; // Uncomment to hide on mobile
     width: 30px;
     height: 30px;
  }
}

.categorySwiperBtnPrev {
  left: 0;
   @media (max-width: 1200px) { // Adjust position for container padding
      left: 0px;
   }
}

.categorySwiperBtnNext {
  right: 0;
   @media (max-width: 1200px) { // Adjust position for container padding
      right: 0px;
   }
}

// Style for disabled state (when loop is false and at start/end)
.swiperBtnDisabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

